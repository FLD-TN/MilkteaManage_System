/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.appsystem.milkteamanage_system.Staff;

import com.appsystem.milkteamanage_system.Utils.DBConnection;
import com.appsystem.milkteamanage_system.Utils.FormatCurrency;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.Image;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.util.HashMap;
import java.util.Map;
import javax.swing.BorderFactory;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

/**
 *
 * @author Admin
 */
public class OrderFrame extends javax.swing.JFrame {

    private StaffHomePage parent;
    private int orderId;
    private int tableNumber;
    private int staffId;
    private String orderStatus;
    private JButton tableButton;
    private String orderType;
    private double totalAmount;
    private double finalTotalAmount;

    /**
     * Creates new form OrderFrame
     */
    public OrderFrame() {
        initComponents();

        OrderDetailPanel.setLayout(new BoxLayout(OrderDetailPanel, BoxLayout.Y_AXIS));

        ProductListPanel.setLayout(new java.awt.GridLayout(0, 2, 20, 20));
        ProductListPanel.setBorder(BorderFactory.createEmptyBorder(10, 15, 10, 20));
        // tăng tốc cuộn
        jScrollPane1.getVerticalScrollBar().setUnitIncrement(16);
        loadProducts();
        loadOrderDetails();
    }

    public OrderFrame(int orderId, int tableNumber, int staffId, String staffName, String orderType, String orderStatus, double totalAmount, JButton tableButton, StaffHomePage parent) {
        this.orderId = orderId;
        this.tableNumber = tableNumber;
        this.staffId = staffId;
        this.orderType = orderType;
        this.orderStatus = orderStatus;
        this.totalAmount = totalAmount;
        this.tableButton = tableButton;
        this.parent = parent;

        initComponents();

        OrderDetailPanel.setLayout(new BoxLayout(OrderDetailPanel, BoxLayout.Y_AXIS));

        ProductListPanel.setLayout(new java.awt.GridLayout(0, 2, 20, 20));
        ProductListPanel.setBorder(BorderFactory.createEmptyBorder(10, 15, 10, 20));
        // tăng tốc cuộn
        jScrollPane1.getVerticalScrollBar().setUnitIncrement(16);
        loadProducts();
        orderIDLabel.setText(String.valueOf(orderId));
        staffNameLabel.setText(staffName);
        if (orderType.equals("Mang đi")) {
            tableNameLabel.setText("—");
        } else {
            tableNameLabel.setText(String.valueOf(tableNumber));

        }
        orderTypeLabel.setText(orderType);
        OrderStatusLabel.setText(orderStatus);
        TotalAmountLabel.setText(String.valueOf(totalAmount));
        FinalTotalAmountLabel.setText(String.valueOf(totalAmount));

        loadOrderDetails();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButton1 = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        orderIDLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        staffNameLabel = new javax.swing.JLabel();
        tableNameLabel = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        orderTypeLabel = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        OrderStatusLabel = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        TotalAmountLabel = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        FinalTotalAmountLabel = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        btnThanhToan = new javax.swing.JButton();
        btnPrintOrder = new javax.swing.JButton();
        btnUpdateOrder = new javax.swing.JButton();
        btnCancelOrder = new javax.swing.JButton();
        btnCloseOrder = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        ProductListPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        OrderDetailPanel = new javax.swing.JPanel();

        jRadioButton1.setText("jRadioButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("----------------------Thông Tin Hoá Đơn --------------------");

        jLabel2.setText("Mã HD: ");

        orderIDLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        orderIDLabel.setForeground(new java.awt.Color(255, 51, 51));
        orderIDLabel.setText("XXX");

        jLabel4.setText("Nhân Viên: ");

        jLabel5.setText("Bàn: ");

        staffNameLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        staffNameLabel.setForeground(new java.awt.Color(255, 51, 51));
        staffNameLabel.setText("NAME");

        tableNameLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tableNameLabel.setForeground(new java.awt.Color(255, 51, 51));
        tableNameLabel.setText("X");

        jLabel8.setText("Loại Hoá Đơn: ");

        orderTypeLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        orderTypeLabel.setForeground(new java.awt.Color(255, 51, 51));
        orderTypeLabel.setText("XXXX");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setText("----------------------------- Chi Tiết ----------------------------");

        jLabel11.setText("Trạng Thái: ");

        OrderStatusLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        OrderStatusLabel.setForeground(new java.awt.Color(51, 255, 51));
        OrderStatusLabel.setText("Đã thanh toán ");

        jLabel13.setText("Tổng: ");

        TotalAmountLabel.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        TotalAmountLabel.setForeground(new java.awt.Color(0, 255, 0));
        TotalAmountLabel.setText("XXX VND");

        jLabel15.setText("Thành Tiền: ");

        FinalTotalAmountLabel.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        FinalTotalAmountLabel.setForeground(new java.awt.Color(0, 204, 0));
        FinalTotalAmountLabel.setText("XXXX VND");

        jLabel18.setText("--------------------------- Thao Tác ----------------------------");

        btnThanhToan.setBackground(new java.awt.Color(0, 153, 204));
        btnThanhToan.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnThanhToan.setText("Thanh Toán");
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });

        btnPrintOrder.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnPrintOrder.setText("In Hoá Đơn");

        btnUpdateOrder.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnUpdateOrder.setText("Cập Nhật");
        btnUpdateOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateOrderActionPerformed(evt);
            }
        });

        btnCancelOrder.setBackground(new java.awt.Color(255, 0, 51));
        btnCancelOrder.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnCancelOrder.setForeground(new java.awt.Color(0, 0, 0));
        btnCancelOrder.setText("Huỷ Hoá Đơn");
        btnCancelOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelOrderActionPerformed(evt);
            }
        });

        btnCloseOrder.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnCloseOrder.setText("Đóng");
        btnCloseOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseOrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(staffNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                            .addComponent(tableNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnThanhToan, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                    .addComponent(btnUpdateOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnCancelOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPrintOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(28, 28, 28))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addGap(72, 72, 72)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(OrderStatusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(TotalAmountLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(FinalTotalAmountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(btnCloseOrder)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(orderTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(orderIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(13, 13, 13))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(orderIDLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(staffNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tableNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(orderTypeLabel))
                .addGap(45, 45, 45)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(OrderStatusLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(TotalAmountLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(FinalTotalAmountLabel))
                .addGap(41, 41, 41)
                .addComponent(jLabel18)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThanhToan)
                    .addComponent(btnPrintOrder))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdateOrder)
                    .addComponent(btnCancelOrder))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addComponent(btnCloseOrder)
                .addGap(27, 27, 27))
        );

        ProductListPanel.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout ProductListPanelLayout = new javax.swing.GroupLayout(ProductListPanel);
        ProductListPanel.setLayout(ProductListPanelLayout);
        ProductListPanelLayout.setHorizontalGroup(
            ProductListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 469, Short.MAX_VALUE)
        );
        ProductListPanelLayout.setVerticalGroup(
            ProductListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 621, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ProductListPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ProductListPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(jPanel2);

        OrderDetailPanel.setBackground(new java.awt.Color(204, 255, 204));

        javax.swing.GroupLayout OrderDetailPanelLayout = new javax.swing.GroupLayout(OrderDetailPanel);
        OrderDetailPanel.setLayout(OrderDetailPanelLayout);
        OrderDetailPanelLayout.setHorizontalGroup(
            OrderDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 365, Short.MAX_VALUE)
        );
        OrderDetailPanelLayout.setVerticalGroup(
            OrderDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 621, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(OrderDetailPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(OrderDetailPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jScrollPane2.setViewportView(jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane2)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseOrderActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCloseOrderActionPerformed

    private void btnCancelOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelOrderActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn huỷ đơn?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            try (Connection conn = DBConnection.getConnection()) {
                String sqlDetail = "DELETE FROM OrderDetails WHERE OrderID = ?";
                PreparedStatement pst1 = conn.prepareStatement(sqlDetail);
                pst1.setInt(1, orderId);
                pst1.executeUpdate();

                String sqlOrder = "DELETE FROM Orders WHERE OrderID = ?";
                PreparedStatement pst2 = conn.prepareStatement(sqlOrder);
                pst2.setInt(1, orderId);
                pst2.executeUpdate();

                // Đổi màu nút lại như ban đầu
                if (parent != null) {
                    parent.resetTableButtonColor(tableNumber);
                }

                this.dispose();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Lỗi khi huỷ đơn: " + ex.getMessage());
            }
        }

    }//GEN-LAST:event_btnCancelOrderActionPerformed

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
        // TODO add your handling code here:
        ThanhToan();
    }//GEN-LAST:event_btnThanhToanActionPerformed

    private void btnUpdateOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateOrderActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_btnUpdateOrderActionPerformed

    private void loadProducts() {
        ProductListPanel.removeAll(); // Xoá nếu có sẵn

        try (Connection conn = DBConnection.getConnection()) {
            String sql = "SELECT * FROM Products WHERE Status = N'Còn Bán'";
            PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();

            while (rs.next()) {
                int productId = rs.getInt("ProductID");
                String name = rs.getString("Name");
                String desc = rs.getString("Description");
                double price = rs.getDouble("Price");
                String imgPath = rs.getString("ImgPath");

                JPanel card = createProductCard(productId, name, desc, price, imgPath);
                ProductListPanel.add(card);
            }

            ProductListPanel.revalidate();
            ProductListPanel.repaint();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi tải sản phẩm: " + e.getMessage());
        }
    }

    private JPanel createProductCard(int productId, String name, String desc, double price, String imgPath) {
        JPanel card = new JPanel(new BorderLayout());
        card.setBorder(BorderFactory.createLineBorder(Color.GRAY));
        card.setPreferredSize(new Dimension(200, 200));

        JLabel lblName = new JLabel(name, JLabel.CENTER);
        lblName.setFont(new Font("Segoe UI", Font.BOLD, 14));
        lblName.setBorder(BorderFactory.createEmptyBorder(10, 0, 2, 0));

        DecimalFormat df = new DecimalFormat("#,###");
        String formattedPrice = df.format(price);
        JLabel lblPrice = new JLabel(formattedPrice + "đ / Ly", JLabel.CENTER);
        lblPrice.setFont(new Font("Segoe UI", Font.BOLD, 13));
        lblPrice.setForeground(Color.red);

        JLabel lblImage = new JLabel();
        lblImage.setHorizontalAlignment(JLabel.CENTER);
        try {
            if (imgPath != null && !imgPath.isEmpty()) {
                Image img = new ImageIcon(imgPath).getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
                lblImage.setIcon(new ImageIcon(img));
            }
        } catch (Exception e) {
            lblImage.setText("No Image");
        }

        JButton btnAdd = new JButton("Thêm");
        btnAdd.addActionListener(e -> {
            JDialog dialog = new JDialog(OrderFrame.this, "Thêm sản phẩm", true);
            dialog.setContentPane(new AddProductToOrder(orderId, productId, name, price, () -> loadOrderDetails()));
            dialog.pack();
            dialog.setLocationRelativeTo(OrderFrame.this);
            dialog.setVisible(true);

        });

        JPanel infoPanel = new JPanel();
        infoPanel.setLayout(new BoxLayout(infoPanel, BoxLayout.Y_AXIS));
        infoPanel.add(lblName);
        infoPanel.add(lblPrice);
        infoPanel.add(Box.createVerticalStrut(5)); // khoảng cách
        infoPanel.add(btnAdd);

        lblName.setAlignmentX(Component.CENTER_ALIGNMENT);
        lblPrice.setAlignmentX(Component.CENTER_ALIGNMENT);
        btnAdd.setAlignmentX(Component.CENTER_ALIGNMENT);

        card.add(lblImage, BorderLayout.NORTH);
        card.add(infoPanel, BorderLayout.CENTER);
        card.add(btnAdd, BorderLayout.SOUTH);

        return card;
    }

    //load danh sách chi tiết đơn hàng
    private void loadOrderDetails() {
        OrderDetailPanel.removeAll(); // xoá dữ liệu cũ

        try (Connection conn = DBConnection.getConnection()) {
            String sql = "SELECT p.Name, od.Quantity, od.UnitPrice, od.SubTotal FROM OrderDetails od JOIN Products p ON od.ProductID = p.ProductID WHERE od.OrderID = ?";
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setInt(1, orderId);
            ResultSet rs = pst.executeQuery();

            while (rs.next()) {
                String name = rs.getString("Name");
                int quantity = rs.getInt("Quantity");
                double price = rs.getDouble("UnitPrice");
                double subtotal = rs.getDouble("SubTotal");

                JPanel itemPanel = createOrderItemPanel(name, quantity, price, subtotal);
                OrderDetailPanel.add(itemPanel);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi load OrderDetails: " + e.getMessage());
        }

        OrderDetailPanel.revalidate();
        OrderDetailPanel.repaint();
        updateTotalAmountLabel();
    }

    // tạo các sản phẩm trong chi tiết đơn hàng
    private JPanel createOrderItemPanel(String name, int quantity, double unitPrice, double subtotal) {
        JPanel panel = new JPanel(new GridLayout(2, 1));
        panel.setBorder(BorderFactory.createEmptyBorder(5, 10, 5, 10));
        panel.setBackground(new Color(204, 255, 204));

        JLabel lblName = new JLabel(name + " × " + quantity);
        lblName.setFont(new Font("Segoe UI", Font.BOLD, 14));

        JLabel lblPrice = new JLabel("Giá: " + FormatCurrency.formatCurrency(unitPrice) + " | Tổng: " + FormatCurrency.formatCurrency(subtotal));
        lblPrice.setFont(new Font("Segoe UI", Font.PLAIN, 12));
        lblPrice.setForeground(Color.DARK_GRAY);

        panel.add(lblName);
        panel.add(lblPrice);

        return panel;
    }

    // Hàm xử lí khi nhấn thanh toán
    private void ThanhToan() {
        int confirm = JOptionPane.showConfirmDialog(this, "Xác nhận thanh toán hóa đơn này?", "Thanh toán", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {

            try (Connection conn = DBConnection.getConnection()) {
                String countSql = "SELECT COUNT(*) AS total FROM OrderDetails WHERE OrderID = ?";
                PreparedStatement countStmt = conn.prepareStatement(countSql);
                countStmt.setInt(1, orderId);
                ResultSet countRs = countStmt.executeQuery();
                if (countRs.next() && countRs.getInt("total") == 0) {
                    JOptionPane.showMessageDialog(this, "Đơn hàng chưa có sản phẩm, không thể thanh toán!");
                    return;
                }
                String sql = "UPDATE Orders SET Status = N'Đã thanh toán',IsActive = 0, TotalAmount = (SELECT SUM(Subtotal) FROM OrderDetails WHERE OrderID = ?) WHERE OrderID = ?";
                PreparedStatement pst = conn.prepareStatement(sql);
                pst.setInt(1, orderId);
                pst.setInt(2, orderId);
                pst.executeUpdate();

                JOptionPane.showMessageDialog(this, "Thanh toán thành công!");

                if (parent != null) {
                    parent.resetTableButtonColor(tableNumber);
                }

                this.dispose();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Lỗi khi thanh toán: " + e.getMessage());
            }
        }
    }

    //update label hiện tổng tiền ở đơn hàng
    private void updateTotalAmountLabel() {
        try (Connection conn = DBConnection.getConnection()) {
            String sql = "SELECT SUM(SubTotal) AS total FROM OrderDetails WHERE OrderID = ?";
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setInt(1, orderId);
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                double total = rs.getDouble("total");
                TotalAmountLabel.setText(FormatCurrency.formatCurrency(total));
                FinalTotalAmountLabel.setText(FormatCurrency.formatCurrency(total));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi tính tổng tiền: " + e.getMessage());
        }
    }
    
    
    // hàm in hoá đơn
      private void PrintOrder() {
        try(Connection conn = DBConnection.getConnection())
        {
            
            
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Lỗi in hoá đơn" + e.getMessage());
        }
            
            
    }
      
      
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrderFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel FinalTotalAmountLabel;
    private javax.swing.JPanel OrderDetailPanel;
    private javax.swing.JLabel OrderStatusLabel;
    private javax.swing.JPanel ProductListPanel;
    private javax.swing.JLabel TotalAmountLabel;
    private javax.swing.JButton btnCancelOrder;
    private javax.swing.JButton btnCloseOrder;
    private javax.swing.JButton btnPrintOrder;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JButton btnUpdateOrder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel orderIDLabel;
    private javax.swing.JLabel orderTypeLabel;
    private javax.swing.JLabel staffNameLabel;
    private javax.swing.JLabel tableNameLabel;
    // End of variables declaration//GEN-END:variables
}
